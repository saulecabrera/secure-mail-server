<!DOCTYPE html>
<html>
	<head>
		<title><%-titleholder %></title>
		 <script src="/socket.io/socket.io.js"></script>
		 <link href='http://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>
		 <link href="http://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css" rel="stylesheet">
		 <link rel='stylesheet' href='/stylesheets/style.css' />
		 <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
		 <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
		 <script src="http://crypto-js.googlecode.com/svn/tags/3.1.2/build/rollups/md5.js"></script>
		 <script src="http://crypto-js.googlecode.com/svn/tags/3.1.2/build/rollups/tripledes.js"></script>
	</head>
	<body>
		<div class="container">
			<div class="header-wrapper">
				<%-headercontent %>
			</div>
			<div class="content-wrapper">
				<%-content %>
			</div>
		</div>
	</body>
	<script type="text/javascript">
		var socket = io();
		var HK = CryptoJS.MD5('valbikcipauuaxfstyltxumlehtlljqtwpcgfulqelzhvdulpn').toString();
		$(document).ready(function() {

			/*var msg = "Hola";
			var tripleDesKey = CryptoJS.MD5(msg).toString();
			console.log("md5: " + tripleDesKey);

			var tripleDesEncryption = CryptoJS.TripleDES.encrypt(msg, tripleDesKey).toString();
			console.log("3des encryption: " + tripleDesEncryption);

			var decryption = CryptoJS.TripleDES.decrypt(tripleDesEncryption, tripleDesKey).toString(CryptoJS.enc.Latin1);
			console.log("3des decryption: " + decryption);*/

			/*
				Sending a new mail
			*/

			$('#btndiv button').click(function() {
				if ($('#todiv input').val() != '') {
					var email = {};
					var JSONString = "";
					email.receivers = $('#todiv input').val().split(',');
					email.subject = $('#subjectdiv input').val();
					email.body = $('#msgbodydiv textarea').val().trim();
					JSONString = JSON.stringify(email);
					var des = CryptoJS.TripleDES.encrypt(JSONString, HK).toString();
					socket.emit('new email', des);
				}
				$('#todiv input').val('');
				$('#subjectdiv input').val('');
				$('#msgbodydiv textarea').val('')
			});
			/*
				Displaying users connected to the server
			*/

			socket.on('login', function(connections){

				var decryption = CryptoJS.TripleDES.decrypt(connections, HK).toString(CryptoJS.enc.Latin1);
				var parsedConnections = JSON.parse(decryption);
				$('#view-server-info #connected .panel.panel-default .panel-heading').text('');
				$('#view-server-info #connected .panel.panel-default .panel-heading').text(
					parsedConnections.onlineUsersCount + ' users online'
				);
          
                $('#view-server-info #connected .panel.panel-default table.table tbody tr').remove();
                for(var i = 0; i < parsedConnections.liveConnections.length; i++){
                    $('#view-server-info #connected .panel.panel-default table.table tbody').append(
					     '<tr>' +
						      '<td>' + parsedConnections.liveConnections[i].userName + '</td>' +
						      '<td>' + parsedConnections.liveConnections[i].userEmailAddress + '</td>' +
					      '</tr>'
				    ); 
                }
			});

            //updating connected users
			socket.on('logout', function(connections){
				var parsedConnections = JSON.parse(connections);
				$('#view-server-info #connected .panel.panel-default .panel-heading').text('');
				$('#view-server-info #connected .panel.panel-default .panel-heading').text(
					parsedConnections.onlineUsersCount + ' users online'
				);
        
                $('#view-server-info #connected .panel.panel-default table.table tbody tr').remove();
                for(var i = 0; i < parsedConnections.liveConnections.length; i++){
                    $('#view-server-info #connected .panel.panel-default table.table tbody').append(
					    '<tr>' +
						    '<td>' + parsedConnections.liveConnections[i].userName + '</td>' +
						    '<td>' + parsedConnections.liveConnections[i].userEmailAddress + '</td>' +
					    '</tr>'
				    ); 
                }
		    });
            //inbox outbox population
            socket.on('new email', function(mServer){
            	var decryption = CryptoJS.TripleDES.decrypt(mServer, HK).toString(CryptoJS.enc.Latin1);
                var parsedMailServer = JSON.parse(decryption);             
                $('#inbox-view #mails .panel.panel-default table.table tbody tr').remove();
                for(var i = 0; i < parsedMailServer.inbox.length; i++){
                    $('#inbox-view #mails .panel.panel-default table.table tbody').append(
                        '<tr>' +
						    '<td>' + parsedMailServer.inbox[i].sender.emailAddress + '</td>' +
                            '<td>' + parsedMailServer.inbox[i].subject + '</td>' +
						    '<td>' + parsedMailServer.inbox[i].body + '</td>' +
                            '<td>' + parsedMailServer.inbox[i].createdAt + '</td>' +
					    '</tr>'
                    );
                }
                $('#outbox-view #mails .panel.panel-default table.table tbody tr').remove();
                for(var i = 0; i < parsedMailServer.outbox.length; i++){
                    $('#outbox-view #mails .panel.panel-default table.table tbody').append(
                        '<tr>' +
						    '<td>' + parsedMailServer.outbox[i].receiver + '</td>' +
                            '<td>' + parsedMailServer.outbox[i].subject + '</td>' +
						    '<td>' + parsedMailServer.outbox[i].body + '</td>' +
                            '<td>' + parsedMailServer.outbox[i].createdAt + '</td>' +
					    '</tr>'
                    );
                }
            });

			socket.on('all-logs', function(l){
				var decryption = CryptoJS.TripleDES.decrypt(l, HK).toString(CryptoJS.enc.Latin1);
				var parsedLogs = JSON.parse(decryption);
				$('#view-server-info #logs .panel.panel-default table.table tbody tr').remove();
                for(var i = 0; i < parsedLogs.logs.length; i++){
                    $('#view-server-info #logs .panel.panel-default table.table tbody').append(
					    '<tr>' +
						    '<td>' + parsedLogs.logs[i].action + '</td>' +
						    '<td>' + parsedLogs.logs[i].location + '</td>' +
						    '<td>' + parsedLogs.logs[i].createdAt + '</td>' +
					    '</tr>'
				    ); 
                }
			});

			socket.on('single-log', function(l){
				var decryption = CryptoJS.TripleDES.decrypt(l, HK).toString(CryptoJS.enc.Latin1);
				var parsedLog = JSON.parse(decryption);
				//$('#view-server-info #logs .panel.panel-default table.table tbody tr').remove();
                
                    $('#view-server-info #logs .panel.panel-default table.table tbody').append(
					    '<tr>' +
						    '<td>' + parsedLog.action + '</td>' +
						    '<td>' + parsedLog.location + '</td>' +
						    '<td>' + parsedLog.createdAt + '</td>' +
					    '</tr>'
				    ); 
			})
        });
	</script>
</html>